version: '3.7'

services:
  postgres:
    container_name: ${PROJECT_NAME}_postgres
    image: postgres:alpine
    volumes:
      - ./backend/sql/schema.sql:/docker-entrypoint-initdb.d/0-schema.sql
      - ./backend/sql/data.sql:/docker-entrypoint-initdb.d/1-data.sql
      - pg_data:/var/lib/postgresql/pg_data
    env_file:
      - .env
    ports:
      - 5432
    restart: always # ignored when deploying a stack in swarm mode or kubernetes
    deploy: # ignored by docker-compose
      restart_policy:
        condition: on-failure

  backend:
    container_name: ${PROJECT_NAME}_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
     - "5000:5000"
    depends_on:
      - redis
    env_file:
      - .env
    volumes:
      - './api/:/usr/app'

  worker:
    container_name: ${PROJECT_NAME}_worker
    build:
      context: celery-queue
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - redis

  redis:
    container_name: ${PROJECT_NAME}_redis
    image: redis
    env_file:
      - .env

  monitor:
    container_name: ${PROJECT_NAME}_monitor
    build:
      context: celery-queue
      dockerfile: Dockerfile
    ports:
     - "5555:5555"
    entrypoint: flower
    command:  -A tasks --port=5555 --broker=redis://redis:6379/0
    depends_on:
      - redis
volumes:
  pg_data:
  nginx-logs:
  static_volume:  # <-- declare the static volume
  media_volume:  # <-- declare the media volume
  redis-data:
